import {MigrationInterface, QueryRunner} from "typeorm";

export class migrations1706923394458 implements MigrationInterface {
    name = 'migrations1706923394458'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "topic" DROP CONSTRAINT "FK_49aff552997dc521ef83fad26e7"`);
        await queryRunner.query(`DROP INDEX "idx_topic_log_topic_index"`);
        await queryRunner.query(`DROP INDEX "idx_topic_log"`);
        await queryRunner.query(`ALTER TABLE "topic" DROP COLUMN "logId"`);
        await queryRunner.query(`ALTER TABLE "topic" ADD "logId" bigint`);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP CONSTRAINT "FK_eb122e51715ca224f918dc2b47b"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP CONSTRAINT "FK_544629cf6957ffb7ebf387aae64"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP CONSTRAINT "FK_c05c68da29114e359592d6e34cf"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP CONSTRAINT "FK_d88eb3cbdbb03a4bc4df900baa3"`);
        await queryRunner.query(`DROP INDEX "idx_decodedlog_contract_action_timestamp_id"`);
        await queryRunner.query(`DROP INDEX "idx_decodedlog_log"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP CONSTRAINT "REL_eb122e51715ca224f918dc2b47"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP COLUMN "logId"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD "logId" bigint`);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD CONSTRAINT "UQ_eb122e51715ca224f918dc2b47b" UNIQUE ("logId")`);
        await queryRunner.query(`DROP INDEX "idx_decodedlog_transaction"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP COLUMN "transactionId"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD "transactionId" bigint`);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD "contractId" bigint`);
        await queryRunner.query(`DROP INDEX "idx_decodedlog_nft"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP COLUMN "nftId"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD "nftId" bigint`);
        await queryRunner.query(`ALTER TABLE "transaction" DROP CONSTRAINT "FK_d246554c12d32ef78934bdc6abd"`);
        await queryRunner.query(`ALTER TABLE "transaction" DROP CONSTRAINT "FK_6d84d55e87b5faffbc3a33c7da8"`);
        await queryRunner.query(`DROP INDEX "idx_transaction_contract"`);
        await queryRunner.query(`ALTER TABLE "transaction" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "transaction" ADD "contractId" bigint`);
        await queryRunner.query(`DROP INDEX "idx_transaction_blockNumber"`);
        await queryRunner.query(`ALTER TABLE "transaction" DROP COLUMN "blockNumberId"`);
        await queryRunner.query(`ALTER TABLE "transaction" ADD "blockNumberId" bigint`);
        await queryRunner.query(`ALTER TABLE "log" DROP CONSTRAINT "FK_dfcbf4069ec1d3ab1be0b381021"`);
        await queryRunner.query(`ALTER TABLE "log" DROP CONSTRAINT "FK_9ac6c31c55c4b31650794599e6b"`);
        await queryRunner.query(`ALTER TABLE "log" DROP CONSTRAINT "FK_ffd3070a6e46a72ebff6aab8cab"`);
        await queryRunner.query(`ALTER TABLE "log" DROP CONSTRAINT "FK_f2ec0b32afa01a9484ed61f15d6"`);
        await queryRunner.query(`DROP INDEX "idx_log_transaction_contract"`);
        await queryRunner.query(`DROP INDEX "idx_log_decodedLog"`);
        await queryRunner.query(`ALTER TABLE "log" DROP CONSTRAINT "REL_dfcbf4069ec1d3ab1be0b38102"`);
        await queryRunner.query(`ALTER TABLE "log" DROP COLUMN "decodedLogId"`);
        await queryRunner.query(`ALTER TABLE "log" ADD "decodedLogId" bigint`);
        await queryRunner.query(`ALTER TABLE "log" ADD CONSTRAINT "UQ_dfcbf4069ec1d3ab1be0b381021" UNIQUE ("decodedLogId")`);
        await queryRunner.query(`ALTER TABLE "log" DROP COLUMN "transactionId"`);
        await queryRunner.query(`ALTER TABLE "log" ADD "transactionId" bigint`);
        await queryRunner.query(`DROP INDEX "idx_log_contract"`);
        await queryRunner.query(`ALTER TABLE "log" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "log" ADD "contractId" bigint`);
        await queryRunner.query(`DROP INDEX "idx_log_nft"`);
        await queryRunner.query(`ALTER TABLE "log" DROP COLUMN "nftId"`);
        await queryRunner.query(`ALTER TABLE "log" ADD "nftId" bigint`);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" DROP CONSTRAINT "FK_77d080c8905feb0880016e90cc1"`);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" DROP CONSTRAINT "FK_bfec7890e548c4c5bc293636019"`);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" DROP CONSTRAINT "attributePropNFTMappingUnique"`);
        await queryRunner.query(`DROP INDEX "idx_attribute_mapping_property"`);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" DROP COLUMN "propertyId"`);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" ADD "propertyId" bigint`);
        await queryRunner.query(`DROP INDEX "idx_attribute_mapping_nft"`);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" DROP COLUMN "nftId"`);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" ADD "nftId" bigint`);
        await queryRunner.query(`ALTER TABLE "nft" DROP CONSTRAINT "FK_56837dbd73abdd996108e955162"`);
        await queryRunner.query(`ALTER TABLE "nft" DROP CONSTRAINT "uniqueIndex"`);
        await queryRunner.query(`DROP INDEX "idx_nft_contract"`);
        await queryRunner.query(`ALTER TABLE "nft" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "nft" ADD "contractId" bigint`);
        await queryRunner.query(`ALTER TABLE "trendCollection" DROP CONSTRAINT "FK_bd942ed678e70a1b00ede2e3f7f"`);
        await queryRunner.query(`ALTER TABLE "trendCollection" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "trendCollection" ADD "contractId" bigint`);
        await queryRunner.query(`ALTER TABLE "openseaCollection" DROP CONSTRAINT "FK_0d4d7bde35689019f1b5b337f7f"`);
        await queryRunner.query(`ALTER TABLE "openseaCollection" DROP CONSTRAINT "REL_0d4d7bde35689019f1b5b337f7"`);
        await queryRunner.query(`ALTER TABLE "openseaCollection" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "openseaCollection" ADD "contractId" bigint`);
        await queryRunner.query(`ALTER TABLE "openseaCollection" ADD CONSTRAINT "UQ_0d4d7bde35689019f1b5b337f7f" UNIQUE ("contractId")`);
        await queryRunner.query(`ALTER TABLE "benefit" DROP CONSTRAINT "FK_9b9a4f919dd74175fb630f5e55a"`);
        await queryRunner.query(`ALTER TABLE "benefit" DROP COLUMN "contractDetailId"`);
        await queryRunner.query(`ALTER TABLE "benefit" ADD "contractDetailId" bigint`);
        await queryRunner.query(`ALTER TABLE "loadmap" DROP CONSTRAINT "FK_3ab92fd7d8bbd183931615f0a5b"`);
        await queryRunner.query(`ALTER TABLE "loadmap" DROP COLUMN "contractDetailId"`);
        await queryRunner.query(`ALTER TABLE "loadmap" ADD "contractDetailId" bigint`);
        await queryRunner.query(`ALTER TABLE "contractDetail" DROP CONSTRAINT "FK_727ffa061c2fe8727c0971479ff"`);
        await queryRunner.query(`ALTER TABLE "contractDetail" DROP CONSTRAINT "REL_727ffa061c2fe8727c0971479f"`);
        await queryRunner.query(`ALTER TABLE "contractDetail" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "contractDetail" ADD "contractId" bigint`);
        await queryRunner.query(`ALTER TABLE "contractDetail" ADD CONSTRAINT "UQ_727ffa061c2fe8727c0971479ff" UNIQUE ("contractId")`);
        await queryRunner.query(`ALTER TABLE "attribute" DROP CONSTRAINT "FK_fbdac0db4ee7b67202ae2f52115"`);
        await queryRunner.query(`ALTER TABLE "trendCollections" DROP CONSTRAINT "FK_0cdcb00e7c8521f583e5478bbd9"`);
        await queryRunner.query(`ALTER TABLE "walletContractConnection" DROP CONSTRAINT "FK_1cef076ec77e55757f034624ba3"`);
        await queryRunner.query(`ALTER TABLE "contract" DROP CONSTRAINT "FK_5b9ac2d9028faac901f4b351d47"`);
        await queryRunner.query(`ALTER TABLE "contract" DROP CONSTRAINT "FK_df6f9c45ff54a962c9717a6f794"`);
        await queryRunner.query(`ALTER TABLE "contract" DROP CONSTRAINT "PK_17c3a89f58a2997276084e706e8"`);
        await queryRunner.query(`ALTER TABLE "contract" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "contract" ADD "id" BIGSERIAL NOT NULL`);
        await queryRunner.query(`ALTER TABLE "contract" ADD CONSTRAINT "PK_17c3a89f58a2997276084e706e8" PRIMARY KEY ("id")`);
        await queryRunner.query(`DROP INDEX "idx_contract_openseaCollection"`);
        await queryRunner.query(`ALTER TABLE "contract" DROP CONSTRAINT "REL_5b9ac2d9028faac901f4b351d4"`);
        await queryRunner.query(`ALTER TABLE "contract" DROP COLUMN "openseaCollectionId"`);
        await queryRunner.query(`ALTER TABLE "contract" ADD "openseaCollectionId" bigint`);
        await queryRunner.query(`ALTER TABLE "contract" ADD CONSTRAINT "UQ_5b9ac2d9028faac901f4b351d47" UNIQUE ("openseaCollectionId")`);
        await queryRunner.query(`ALTER TABLE "contract" DROP CONSTRAINT "UQ_df6f9c45ff54a962c9717a6f794"`);
        await queryRunner.query(`ALTER TABLE "contract" DROP COLUMN "contractDetailId"`);
        await queryRunner.query(`ALTER TABLE "contract" ADD "contractDetailId" bigint`);
        await queryRunner.query(`ALTER TABLE "contract" ADD CONSTRAINT "UQ_df6f9c45ff54a962c9717a6f794" UNIQUE ("contractDetailId")`);
        await queryRunner.query(`ALTER TABLE "attribute" DROP CONSTRAINT "attributeUnique"`);
        await queryRunner.query(`DROP INDEX "idx_attribute_contract"`);
        await queryRunner.query(`ALTER TABLE "attribute" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "attribute" ADD "contractId" bigint`);
        await queryRunner.query(`ALTER TABLE "trendCollections" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "trendCollections" ADD "contractId" bigint`);
        await queryRunner.query(`ALTER TABLE "upcomingTwitter" DROP CONSTRAINT "FK_4e219f94e1a7480b1a070375d38"`);
        await queryRunner.query(`ALTER TABLE "upcomingTwitter" DROP COLUMN "upcomingContractId"`);
        await queryRunner.query(`ALTER TABLE "upcomingTwitter" ADD "upcomingContractId" bigint`);
        await queryRunner.query(`ALTER TABLE "upcomingDiscord" DROP CONSTRAINT "FK_570b09c73cc289fbf942d8057dc"`);
        await queryRunner.query(`ALTER TABLE "upcomingDiscord" DROP COLUMN "upcomingContractId"`);
        await queryRunner.query(`ALTER TABLE "upcomingDiscord" ADD "upcomingContractId" bigint`);
        await queryRunner.query(`ALTER TABLE "trendUpcomingCollection" DROP CONSTRAINT "FK_50fda455816d9179571241b14f4"`);
        await queryRunner.query(`ALTER TABLE "trendUpcomingCollection" DROP COLUMN "upcomingContractId"`);
        await queryRunner.query(`ALTER TABLE "trendUpcomingCollection" ADD "upcomingContractId" bigint`);
        await queryRunner.query(`ALTER TABLE "walletContractConnection" DROP CONSTRAINT "FK_408ef862b737458ae1bd70941a6"`);
        await queryRunner.query(`ALTER TABLE "walletContractConnection" DROP COLUMN "walletId"`);
        await queryRunner.query(`ALTER TABLE "walletContractConnection" ADD "walletId" bigint NOT NULL`);
        await queryRunner.query(`ALTER TABLE "walletContractConnection" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "walletContractConnection" ADD "contractId" bigint NOT NULL`);
        await queryRunner.query(`CREATE INDEX "idx_topic_log" ON "topic" ("logId") `);
        await queryRunner.query(`CREATE INDEX "idx_topic_log_topic_index" ON "topic" ("logId", "topic", "index") `);
        await queryRunner.query(`CREATE INDEX "idx_decodedlog_nft" ON "decodedLog" ("nftId") `);
        await queryRunner.query(`CREATE INDEX "idx_decodedlog_log" ON "decodedLog" ("logId") `);
        await queryRunner.query(`CREATE INDEX "idx_decodedlog_transaction" ON "decodedLog" ("transactionId") `);
        await queryRunner.query(`CREATE INDEX "idx_decodedlog_contract_action_timestamp_id" ON "decodedLog" ("contractId", "action", "timestamp", "id") `);
        await queryRunner.query(`CREATE INDEX "idx_transaction_contract" ON "transaction" ("contractId") `);
        await queryRunner.query(`CREATE INDEX "idx_transaction_blockNumber" ON "transaction" ("blockNumberId") `);
        await queryRunner.query(`CREATE INDEX "idx_log_nft" ON "log" ("nftId") `);
        await queryRunner.query(`CREATE INDEX "idx_log_contract" ON "log" ("contractId") `);
        await queryRunner.query(`CREATE INDEX "idx_log_decodedLog" ON "log" ("decodedLogId") `);
        await queryRunner.query(`CREATE INDEX "idx_log_transaction_contract" ON "log" ("transactionId", "contractId") `);
        await queryRunner.query(`CREATE INDEX "idx_attribute_mapping_property" ON "attributePropNFTMapping" ("propertyId") `);
        await queryRunner.query(`CREATE INDEX "idx_attribute_mapping_nft" ON "attributePropNFTMapping" ("nftId") `);
        await queryRunner.query(`CREATE INDEX "idx_nft_contract" ON "nft" ("contractId") `);
        await queryRunner.query(`CREATE INDEX "idx_contract_openseaCollection" ON "contract" ("openseaCollectionId") `);
        await queryRunner.query(`CREATE INDEX "idx_attribute_contract" ON "attribute" ("contractId") `);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" ADD CONSTRAINT "attributePropNFTMappingUnique" UNIQUE ("propertyId", "nftId")`);
        await queryRunner.query(`ALTER TABLE "nft" ADD CONSTRAINT "uniqueIndex" UNIQUE ("contractId", "tokenId")`);
        await queryRunner.query(`ALTER TABLE "attribute" ADD CONSTRAINT "attributeUnique" UNIQUE ("contractId", "traitType")`);
        await queryRunner.query(`ALTER TABLE "topic" ADD CONSTRAINT "FK_49aff552997dc521ef83fad26e7" FOREIGN KEY ("logId") REFERENCES "log"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD CONSTRAINT "FK_eb122e51715ca224f918dc2b47b" FOREIGN KEY ("logId") REFERENCES "log"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD CONSTRAINT "FK_544629cf6957ffb7ebf387aae64" FOREIGN KEY ("transactionId") REFERENCES "transaction"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD CONSTRAINT "FK_c05c68da29114e359592d6e34cf" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD CONSTRAINT "FK_d88eb3cbdbb03a4bc4df900baa3" FOREIGN KEY ("nftId") REFERENCES "nft"("id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "transaction" ADD CONSTRAINT "FK_d246554c12d32ef78934bdc6abd" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "transaction" ADD CONSTRAINT "FK_6d84d55e87b5faffbc3a33c7da8" FOREIGN KEY ("blockNumberId") REFERENCES "blockNumber"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "log" ADD CONSTRAINT "FK_dfcbf4069ec1d3ab1be0b381021" FOREIGN KEY ("decodedLogId") REFERENCES "decodedLog"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "log" ADD CONSTRAINT "FK_9ac6c31c55c4b31650794599e6b" FOREIGN KEY ("transactionId") REFERENCES "transaction"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "log" ADD CONSTRAINT "FK_ffd3070a6e46a72ebff6aab8cab" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "log" ADD CONSTRAINT "FK_f2ec0b32afa01a9484ed61f15d6" FOREIGN KEY ("nftId") REFERENCES "nft"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" ADD CONSTRAINT "FK_77d080c8905feb0880016e90cc1" FOREIGN KEY ("propertyId") REFERENCES "attributeProperty"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" ADD CONSTRAINT "FK_bfec7890e548c4c5bc293636019" FOREIGN KEY ("nftId") REFERENCES "nft"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "nft" ADD CONSTRAINT "FK_56837dbd73abdd996108e955162" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trendCollection" ADD CONSTRAINT "FK_bd942ed678e70a1b00ede2e3f7f" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "openseaCollection" ADD CONSTRAINT "FK_0d4d7bde35689019f1b5b337f7f" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "benefit" ADD CONSTRAINT "FK_9b9a4f919dd74175fb630f5e55a" FOREIGN KEY ("contractDetailId") REFERENCES "contractDetail"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "loadmap" ADD CONSTRAINT "FK_3ab92fd7d8bbd183931615f0a5b" FOREIGN KEY ("contractDetailId") REFERENCES "contractDetail"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "contractDetail" ADD CONSTRAINT "FK_727ffa061c2fe8727c0971479ff" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "contract" ADD CONSTRAINT "FK_5b9ac2d9028faac901f4b351d47" FOREIGN KEY ("openseaCollectionId") REFERENCES "openseaCollection"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "contract" ADD CONSTRAINT "FK_df6f9c45ff54a962c9717a6f794" FOREIGN KEY ("contractDetailId") REFERENCES "contractDetail"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attribute" ADD CONSTRAINT "FK_fbdac0db4ee7b67202ae2f52115" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trendCollections" ADD CONSTRAINT "FK_0cdcb00e7c8521f583e5478bbd9" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "upcomingTwitter" ADD CONSTRAINT "FK_4e219f94e1a7480b1a070375d38" FOREIGN KEY ("upcomingContractId") REFERENCES "upcomingContract"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "upcomingDiscord" ADD CONSTRAINT "FK_570b09c73cc289fbf942d8057dc" FOREIGN KEY ("upcomingContractId") REFERENCES "upcomingContract"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trendUpcomingCollection" ADD CONSTRAINT "FK_50fda455816d9179571241b14f4" FOREIGN KEY ("upcomingContractId") REFERENCES "upcomingContract"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "walletContractConnection" ADD CONSTRAINT "FK_408ef862b737458ae1bd70941a6" FOREIGN KEY ("walletId") REFERENCES "wallet"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "walletContractConnection" ADD CONSTRAINT "FK_1cef076ec77e55757f034624ba3" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "walletContractConnection" DROP CONSTRAINT "FK_1cef076ec77e55757f034624ba3"`);
        await queryRunner.query(`ALTER TABLE "walletContractConnection" DROP CONSTRAINT "FK_408ef862b737458ae1bd70941a6"`);
        await queryRunner.query(`ALTER TABLE "trendUpcomingCollection" DROP CONSTRAINT "FK_50fda455816d9179571241b14f4"`);
        await queryRunner.query(`ALTER TABLE "upcomingDiscord" DROP CONSTRAINT "FK_570b09c73cc289fbf942d8057dc"`);
        await queryRunner.query(`ALTER TABLE "upcomingTwitter" DROP CONSTRAINT "FK_4e219f94e1a7480b1a070375d38"`);
        await queryRunner.query(`ALTER TABLE "trendCollections" DROP CONSTRAINT "FK_0cdcb00e7c8521f583e5478bbd9"`);
        await queryRunner.query(`ALTER TABLE "attribute" DROP CONSTRAINT "FK_fbdac0db4ee7b67202ae2f52115"`);
        await queryRunner.query(`ALTER TABLE "contract" DROP CONSTRAINT "FK_df6f9c45ff54a962c9717a6f794"`);
        await queryRunner.query(`ALTER TABLE "contract" DROP CONSTRAINT "FK_5b9ac2d9028faac901f4b351d47"`);
        await queryRunner.query(`ALTER TABLE "contractDetail" DROP CONSTRAINT "FK_727ffa061c2fe8727c0971479ff"`);
        await queryRunner.query(`ALTER TABLE "loadmap" DROP CONSTRAINT "FK_3ab92fd7d8bbd183931615f0a5b"`);
        await queryRunner.query(`ALTER TABLE "benefit" DROP CONSTRAINT "FK_9b9a4f919dd74175fb630f5e55a"`);
        await queryRunner.query(`ALTER TABLE "openseaCollection" DROP CONSTRAINT "FK_0d4d7bde35689019f1b5b337f7f"`);
        await queryRunner.query(`ALTER TABLE "trendCollection" DROP CONSTRAINT "FK_bd942ed678e70a1b00ede2e3f7f"`);
        await queryRunner.query(`ALTER TABLE "nft" DROP CONSTRAINT "FK_56837dbd73abdd996108e955162"`);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" DROP CONSTRAINT "FK_bfec7890e548c4c5bc293636019"`);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" DROP CONSTRAINT "FK_77d080c8905feb0880016e90cc1"`);
        await queryRunner.query(`ALTER TABLE "log" DROP CONSTRAINT "FK_f2ec0b32afa01a9484ed61f15d6"`);
        await queryRunner.query(`ALTER TABLE "log" DROP CONSTRAINT "FK_ffd3070a6e46a72ebff6aab8cab"`);
        await queryRunner.query(`ALTER TABLE "log" DROP CONSTRAINT "FK_9ac6c31c55c4b31650794599e6b"`);
        await queryRunner.query(`ALTER TABLE "log" DROP CONSTRAINT "FK_dfcbf4069ec1d3ab1be0b381021"`);
        await queryRunner.query(`ALTER TABLE "transaction" DROP CONSTRAINT "FK_6d84d55e87b5faffbc3a33c7da8"`);
        await queryRunner.query(`ALTER TABLE "transaction" DROP CONSTRAINT "FK_d246554c12d32ef78934bdc6abd"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP CONSTRAINT "FK_d88eb3cbdbb03a4bc4df900baa3"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP CONSTRAINT "FK_c05c68da29114e359592d6e34cf"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP CONSTRAINT "FK_544629cf6957ffb7ebf387aae64"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP CONSTRAINT "FK_eb122e51715ca224f918dc2b47b"`);
        await queryRunner.query(`ALTER TABLE "topic" DROP CONSTRAINT "FK_49aff552997dc521ef83fad26e7"`);
        await queryRunner.query(`ALTER TABLE "attribute" DROP CONSTRAINT "attributeUnique"`);
        await queryRunner.query(`ALTER TABLE "nft" DROP CONSTRAINT "uniqueIndex"`);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" DROP CONSTRAINT "attributePropNFTMappingUnique"`);
        await queryRunner.query(`DROP INDEX "idx_attribute_contract"`);
        await queryRunner.query(`DROP INDEX "idx_contract_openseaCollection"`);
        await queryRunner.query(`DROP INDEX "idx_nft_contract"`);
        await queryRunner.query(`DROP INDEX "idx_attribute_mapping_nft"`);
        await queryRunner.query(`DROP INDEX "idx_attribute_mapping_property"`);
        await queryRunner.query(`DROP INDEX "idx_log_transaction_contract"`);
        await queryRunner.query(`DROP INDEX "idx_log_decodedLog"`);
        await queryRunner.query(`DROP INDEX "idx_log_contract"`);
        await queryRunner.query(`DROP INDEX "idx_log_nft"`);
        await queryRunner.query(`DROP INDEX "idx_transaction_blockNumber"`);
        await queryRunner.query(`DROP INDEX "idx_transaction_contract"`);
        await queryRunner.query(`DROP INDEX "idx_decodedlog_contract_action_timestamp_id"`);
        await queryRunner.query(`DROP INDEX "idx_decodedlog_transaction"`);
        await queryRunner.query(`DROP INDEX "idx_decodedlog_log"`);
        await queryRunner.query(`DROP INDEX "idx_decodedlog_nft"`);
        await queryRunner.query(`DROP INDEX "idx_topic_log_topic_index"`);
        await queryRunner.query(`DROP INDEX "idx_topic_log"`);
        await queryRunner.query(`ALTER TABLE "walletContractConnection" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "walletContractConnection" ADD "contractId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "walletContractConnection" DROP COLUMN "walletId"`);
        await queryRunner.query(`ALTER TABLE "walletContractConnection" ADD "walletId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "walletContractConnection" ADD CONSTRAINT "FK_408ef862b737458ae1bd70941a6" FOREIGN KEY ("walletId") REFERENCES "wallet"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trendUpcomingCollection" DROP COLUMN "upcomingContractId"`);
        await queryRunner.query(`ALTER TABLE "trendUpcomingCollection" ADD "upcomingContractId" integer`);
        await queryRunner.query(`ALTER TABLE "trendUpcomingCollection" ADD CONSTRAINT "FK_50fda455816d9179571241b14f4" FOREIGN KEY ("upcomingContractId") REFERENCES "upcomingContract"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "upcomingDiscord" DROP COLUMN "upcomingContractId"`);
        await queryRunner.query(`ALTER TABLE "upcomingDiscord" ADD "upcomingContractId" integer`);
        await queryRunner.query(`ALTER TABLE "upcomingDiscord" ADD CONSTRAINT "FK_570b09c73cc289fbf942d8057dc" FOREIGN KEY ("upcomingContractId") REFERENCES "upcomingContract"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "upcomingTwitter" DROP COLUMN "upcomingContractId"`);
        await queryRunner.query(`ALTER TABLE "upcomingTwitter" ADD "upcomingContractId" integer`);
        await queryRunner.query(`ALTER TABLE "upcomingTwitter" ADD CONSTRAINT "FK_4e219f94e1a7480b1a070375d38" FOREIGN KEY ("upcomingContractId") REFERENCES "upcomingContract"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trendCollections" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "trendCollections" ADD "contractId" integer`);
        await queryRunner.query(`ALTER TABLE "attribute" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "attribute" ADD "contractId" integer`);
        await queryRunner.query(`CREATE INDEX "idx_attribute_contract" ON "attribute" ("contractId") `);
        await queryRunner.query(`ALTER TABLE "attribute" ADD CONSTRAINT "attributeUnique" UNIQUE ("traitType", "contractId")`);
        await queryRunner.query(`ALTER TABLE "contract" DROP CONSTRAINT "UQ_df6f9c45ff54a962c9717a6f794"`);
        await queryRunner.query(`ALTER TABLE "contract" DROP COLUMN "contractDetailId"`);
        await queryRunner.query(`ALTER TABLE "contract" ADD "contractDetailId" integer`);
        await queryRunner.query(`ALTER TABLE "contract" ADD CONSTRAINT "UQ_df6f9c45ff54a962c9717a6f794" UNIQUE ("contractDetailId")`);
        await queryRunner.query(`ALTER TABLE "contract" DROP CONSTRAINT "UQ_5b9ac2d9028faac901f4b351d47"`);
        await queryRunner.query(`ALTER TABLE "contract" DROP COLUMN "openseaCollectionId"`);
        await queryRunner.query(`ALTER TABLE "contract" ADD "openseaCollectionId" integer`);
        await queryRunner.query(`ALTER TABLE "contract" ADD CONSTRAINT "REL_5b9ac2d9028faac901f4b351d4" UNIQUE ("openseaCollectionId")`);
        await queryRunner.query(`CREATE INDEX "idx_contract_openseaCollection" ON "contract" ("openseaCollectionId") `);
        await queryRunner.query(`ALTER TABLE "contract" DROP CONSTRAINT "PK_17c3a89f58a2997276084e706e8"`);
        await queryRunner.query(`ALTER TABLE "contract" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "contract" ADD "id" SERIAL NOT NULL`);
        await queryRunner.query(`ALTER TABLE "contract" ADD CONSTRAINT "PK_17c3a89f58a2997276084e706e8" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "contract" ADD CONSTRAINT "FK_df6f9c45ff54a962c9717a6f794" FOREIGN KEY ("contractDetailId") REFERENCES "contractDetail"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "contract" ADD CONSTRAINT "FK_5b9ac2d9028faac901f4b351d47" FOREIGN KEY ("openseaCollectionId") REFERENCES "openseaCollection"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "walletContractConnection" ADD CONSTRAINT "FK_1cef076ec77e55757f034624ba3" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trendCollections" ADD CONSTRAINT "FK_0cdcb00e7c8521f583e5478bbd9" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attribute" ADD CONSTRAINT "FK_fbdac0db4ee7b67202ae2f52115" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "contractDetail" DROP CONSTRAINT "UQ_727ffa061c2fe8727c0971479ff"`);
        await queryRunner.query(`ALTER TABLE "contractDetail" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "contractDetail" ADD "contractId" integer`);
        await queryRunner.query(`ALTER TABLE "contractDetail" ADD CONSTRAINT "REL_727ffa061c2fe8727c0971479f" UNIQUE ("contractId")`);
        await queryRunner.query(`ALTER TABLE "contractDetail" ADD CONSTRAINT "FK_727ffa061c2fe8727c0971479ff" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "loadmap" DROP COLUMN "contractDetailId"`);
        await queryRunner.query(`ALTER TABLE "loadmap" ADD "contractDetailId" integer`);
        await queryRunner.query(`ALTER TABLE "loadmap" ADD CONSTRAINT "FK_3ab92fd7d8bbd183931615f0a5b" FOREIGN KEY ("contractDetailId") REFERENCES "contractDetail"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "benefit" DROP COLUMN "contractDetailId"`);
        await queryRunner.query(`ALTER TABLE "benefit" ADD "contractDetailId" integer`);
        await queryRunner.query(`ALTER TABLE "benefit" ADD CONSTRAINT "FK_9b9a4f919dd74175fb630f5e55a" FOREIGN KEY ("contractDetailId") REFERENCES "contractDetail"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "openseaCollection" DROP CONSTRAINT "UQ_0d4d7bde35689019f1b5b337f7f"`);
        await queryRunner.query(`ALTER TABLE "openseaCollection" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "openseaCollection" ADD "contractId" integer`);
        await queryRunner.query(`ALTER TABLE "openseaCollection" ADD CONSTRAINT "REL_0d4d7bde35689019f1b5b337f7" UNIQUE ("contractId")`);
        await queryRunner.query(`ALTER TABLE "openseaCollection" ADD CONSTRAINT "FK_0d4d7bde35689019f1b5b337f7f" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trendCollection" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "trendCollection" ADD "contractId" integer`);
        await queryRunner.query(`ALTER TABLE "trendCollection" ADD CONSTRAINT "FK_bd942ed678e70a1b00ede2e3f7f" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "nft" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "nft" ADD "contractId" integer`);
        await queryRunner.query(`CREATE INDEX "idx_nft_contract" ON "nft" ("contractId") `);
        await queryRunner.query(`ALTER TABLE "nft" ADD CONSTRAINT "uniqueIndex" UNIQUE ("tokenId", "contractId")`);
        await queryRunner.query(`ALTER TABLE "nft" ADD CONSTRAINT "FK_56837dbd73abdd996108e955162" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" DROP COLUMN "nftId"`);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" ADD "nftId" integer`);
        await queryRunner.query(`CREATE INDEX "idx_attribute_mapping_nft" ON "attributePropNFTMapping" ("nftId") `);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" DROP COLUMN "propertyId"`);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" ADD "propertyId" integer`);
        await queryRunner.query(`CREATE INDEX "idx_attribute_mapping_property" ON "attributePropNFTMapping" ("propertyId") `);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" ADD CONSTRAINT "attributePropNFTMappingUnique" UNIQUE ("propertyId", "nftId")`);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" ADD CONSTRAINT "FK_bfec7890e548c4c5bc293636019" FOREIGN KEY ("nftId") REFERENCES "nft"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attributePropNFTMapping" ADD CONSTRAINT "FK_77d080c8905feb0880016e90cc1" FOREIGN KEY ("propertyId") REFERENCES "attributeProperty"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "log" DROP COLUMN "nftId"`);
        await queryRunner.query(`ALTER TABLE "log" ADD "nftId" integer`);
        await queryRunner.query(`CREATE INDEX "idx_log_nft" ON "log" ("nftId") `);
        await queryRunner.query(`ALTER TABLE "log" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "log" ADD "contractId" integer`);
        await queryRunner.query(`CREATE INDEX "idx_log_contract" ON "log" ("contractId") `);
        await queryRunner.query(`ALTER TABLE "log" DROP COLUMN "transactionId"`);
        await queryRunner.query(`ALTER TABLE "log" ADD "transactionId" integer`);
        await queryRunner.query(`ALTER TABLE "log" DROP CONSTRAINT "UQ_dfcbf4069ec1d3ab1be0b381021"`);
        await queryRunner.query(`ALTER TABLE "log" DROP COLUMN "decodedLogId"`);
        await queryRunner.query(`ALTER TABLE "log" ADD "decodedLogId" integer`);
        await queryRunner.query(`ALTER TABLE "log" ADD CONSTRAINT "REL_dfcbf4069ec1d3ab1be0b38102" UNIQUE ("decodedLogId")`);
        await queryRunner.query(`CREATE INDEX "idx_log_decodedLog" ON "log" ("decodedLogId") `);
        await queryRunner.query(`CREATE INDEX "idx_log_transaction_contract" ON "log" ("transactionId", "contractId") `);
        await queryRunner.query(`ALTER TABLE "log" ADD CONSTRAINT "FK_f2ec0b32afa01a9484ed61f15d6" FOREIGN KEY ("nftId") REFERENCES "nft"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "log" ADD CONSTRAINT "FK_ffd3070a6e46a72ebff6aab8cab" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "log" ADD CONSTRAINT "FK_9ac6c31c55c4b31650794599e6b" FOREIGN KEY ("transactionId") REFERENCES "transaction"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "log" ADD CONSTRAINT "FK_dfcbf4069ec1d3ab1be0b381021" FOREIGN KEY ("decodedLogId") REFERENCES "decodedLog"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "transaction" DROP COLUMN "blockNumberId"`);
        await queryRunner.query(`ALTER TABLE "transaction" ADD "blockNumberId" integer`);
        await queryRunner.query(`CREATE INDEX "idx_transaction_blockNumber" ON "transaction" ("blockNumberId") `);
        await queryRunner.query(`ALTER TABLE "transaction" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "transaction" ADD "contractId" integer`);
        await queryRunner.query(`CREATE INDEX "idx_transaction_contract" ON "transaction" ("contractId") `);
        await queryRunner.query(`ALTER TABLE "transaction" ADD CONSTRAINT "FK_6d84d55e87b5faffbc3a33c7da8" FOREIGN KEY ("blockNumberId") REFERENCES "blockNumber"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "transaction" ADD CONSTRAINT "FK_d246554c12d32ef78934bdc6abd" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP COLUMN "nftId"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD "nftId" integer`);
        await queryRunner.query(`CREATE INDEX "idx_decodedlog_nft" ON "decodedLog" ("nftId") `);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP COLUMN "contractId"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD "contractId" integer`);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP COLUMN "transactionId"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD "transactionId" integer`);
        await queryRunner.query(`CREATE INDEX "idx_decodedlog_transaction" ON "decodedLog" ("transactionId") `);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP CONSTRAINT "UQ_eb122e51715ca224f918dc2b47b"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" DROP COLUMN "logId"`);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD "logId" integer`);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD CONSTRAINT "REL_eb122e51715ca224f918dc2b47" UNIQUE ("logId")`);
        await queryRunner.query(`CREATE INDEX "idx_decodedlog_log" ON "decodedLog" ("logId") `);
        await queryRunner.query(`CREATE INDEX "idx_decodedlog_contract_action_timestamp_id" ON "decodedLog" ("id", "action", "timestamp", "contractId") `);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD CONSTRAINT "FK_d88eb3cbdbb03a4bc4df900baa3" FOREIGN KEY ("nftId") REFERENCES "nft"("id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD CONSTRAINT "FK_c05c68da29114e359592d6e34cf" FOREIGN KEY ("contractId") REFERENCES "contract"("id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD CONSTRAINT "FK_544629cf6957ffb7ebf387aae64" FOREIGN KEY ("transactionId") REFERENCES "transaction"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "decodedLog" ADD CONSTRAINT "FK_eb122e51715ca224f918dc2b47b" FOREIGN KEY ("logId") REFERENCES "log"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "topic" DROP COLUMN "logId"`);
        await queryRunner.query(`ALTER TABLE "topic" ADD "logId" integer`);
        await queryRunner.query(`CREATE INDEX "idx_topic_log" ON "topic" ("logId") `);
        await queryRunner.query(`CREATE INDEX "idx_topic_log_topic_index" ON "topic" ("index", "topic", "logId") `);
        await queryRunner.query(`ALTER TABLE "topic" ADD CONSTRAINT "FK_49aff552997dc521ef83fad26e7" FOREIGN KEY ("logId") REFERENCES "log"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

}
